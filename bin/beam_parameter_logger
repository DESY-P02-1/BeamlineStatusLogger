#!/usr/bin/env python3
from BeamlineStatusLogger.sources import TangoDeviceAttributeSource
from BeamlineStatusLogger.processors import PeakFitter
from BeamlineStatusLogger.sinks import InfluxDBSink
from BeamlineStatusLogger.logger import Logger
from BeamlineStatusLogger.timer import SynchronizedPeriodicTimer
import argparse


parser = argparse.ArgumentParser(description="Log beam parameters from" +
                                 " Tango camera images.")
parser.add_argument("--device", "-d", type=str,
                    help='The Tango device name')
parser.add_argument("--attribute", "-a", type=str, default="frame",
                    help="The Tango attribute name")
parser.add_argument("--database", "-D", type=str,
                    help="The influxdb database name")
parser.add_argument("--measurement", "-m", type=str, default="beam_parameters",
                    help="The influxdb measurement name")
parser.add_argument("--log_dir", type=str, default="",
                    help="A directory for logging frames with large changes")

args = parser.parse_args()

database = args.database
measurement = args.measurement
device = args.device
attribute = args.attribute
log_dir = args.log_dir


source = TangoDeviceAttributeSource(device,
                                    attribute,
                                    {"device": device})


fit_peak = PeakFitter(attribute, log_dir=log_dir)

sink = InfluxDBSink(database, measurement, create_db=True)

timer = SynchronizedPeriodicTimer(5, offset=0.05)

logger = Logger(source, fit_peak, sink, timer)

logger.run()
